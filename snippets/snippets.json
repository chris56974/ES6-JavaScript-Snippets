{
  "require": {
    "prefix": "req",
    "body": "const $0 = require('$1');"
  },
  "moduleExports": {
    "prefix": "mex",
    "body": "module.exports = $0;"
  },
  "import": {
    "prefix": "imp",
    "body": "import $0 from '$1';"
  },
  "importNoModuleName": {
    "prefix": "imn",
    "body": "import '$0';"
  },
  "importDestructing": {
    "prefix": "imd",
    "body": "import { $0 } from '$1';"
  },
  "importEverything": {
    "prefix": "ime",
    "body": "import * as $1 from '$0';"
  },
  "importAs": {
    "prefix": "ima",
    "body": "import { $2 as $0 } from '$1';"
  },
  "exportDefault": {
    "prefix": "exp",
    "body": "export default $0;"
  },
  "exportDestructing": {
    "prefix": "exd",
    "body": "export { $1 } from '${2:module}';$0"
  },
  "exportAs": {
    "prefix": "exa",
    "body": "export { $2 as $0 } from '$1'"
  },
  "consoleLog": {
    "prefix": "cl",
    "body": "console.log($0)"
  },
  "consoleLogObject": {
    "prefix": "clo",
    "body": "console.log('${1:object}', ${1:object});"
  },
  "consoleDir": {
    "prefix": "cdir",
    "body": "console.dir(${1:object})"
  },
  "addEventListener": {
    "prefix": "ae",
    "body": "addEventListener('${1:load}', $0)" 
  },
  "querySelector": {
    "prefix": "qs",
    "body": ".querySelector('$0')"
  },
  "querySelectorAll": {
    "prefix": "qsa",
    "body": "querySelectorAll('$0')"
  },
  "appendChild": {
    "prefix": "ac",
    "body": "appendChild($0);"
  },
  "removeChild": {
    "prefix": "rc",
    "body": "removeChild($0);"
  },
  "createElement": {
    "prefix": "ce",
    "body": "createElement('$0');"
  },
  "createTextNode": {
    "prefix": "ctn",
    "body": "createTextNode('$0');"
  },
  "createDocumentFragment": {
    "prefix": "cdf",
    "body": "createDocumentFragment();"
  },
  "classList.add": {
    "prefix": "ca",
    "body": "classList.add('$0');"
  },
  "classList.toggle": {
    "prefix": "ct",
    "body": "classList.toggle('$0');"
  },
  "classList.remove": {
    "prefix": "cr",
    "body": "classList.remove('$0');"
  },
  "getElementById": {
    "prefix": "gi",
    "body": "getElementById('$0');"
  },
  "getElementsByClassName": {
    "prefix": "gc",
    "body": "getElementsByClassName('$0');"
  },
  "getElementsByTagName": {
    "prefix": "gt",
    "body": "getElementsByTagName('$0');"
  },
  "getAttribute": {
    "prefix": "ga",
    "body": "getAttribute('$0');"
  },
  "setAttribute": {
    "prefix": "sa",
    "body": "setAttribute($0);"
  },
  "removeAttribute": {
    "prefix": "ra",
    "body": "removeAttribute('$0');"
  },
  "querySelectAddEvent": {
    "prefix": "qsae",
    "body": "querySelector('$1').addEventListener('$2', $0)"
  },
  "forEach": {
    "prefix": "fe",
    "body": "forEach(($1) => {\n\t$0\n})"
  },
  "forOf": {
    "prefix": "fof",
    "body": "for (const $1 of $2) {\n\t$0\n}"
  },
  "forIn": {
    "prefix": "fin",
    "body": "for (const $1 in $2) {\n\t$0\n}"
  },
  "function": {
    "prefix": "fn",
    "body": "function $0() {\n\t\n}"
  },
  "function_alt": {
    "prefix": "fnn",
    "body": "function $1($0) {\n\t\n}"
  },
  "arrow_function": {
    "prefix": "afn",
    "body": "const $1 = ($2) => $0"
  },
  "arrow_function_alt": {
    "prefix": "afnn",
    "body": "const $1 = ($0) => {\n\t\n}"
  },
  "destructingObject": {
    "prefix": "dob",
    "body": "const { $0 } = $1"
  },
  "destructingArray": {
    "prefix": "dar",
    "body": "const [$0] = $1"
  },
  "prototype": {
    "prefix": "proto",
    "body": "prototype.$1 = $0"
  },
  "immediately-invoked function expression": {
    "prefix": "iife",
    "body": "(($1) => {\n\t$0\n}()"
  },
  "class1": {
    "prefix": "cla1",
    "body": [
      "class $1 {",
      "\tconstructor(${2:firstProp}) {",
      "\t\tthis.${2:firstProp} = ${2:firstProp};",
      "\t}",
      "}"
    ]
  },
  "class2": {
    "prefix": "cla2",
    "body": [
      "class $1 {",
      "\tconstructor(${2:firstProp}, ${3:secondProp}) {",
      "\t\tthis.${2:firstProp} = ${2:firstProp};",
      "\t\tthis.${3:secondProp} = ${3:secondProp};",
      "\t}",
      "}"
    ]
  },
  "class3": {
    "prefix": "cla3",
    "body": [
      "class ${1:className} {",
      "\tconstructor(${2:firstProp}, ${3:secondProp}, ${4:thirdProp}) {",
      "\t\tthis.${2:firstProp} = ${2:firstProp};",
      "\t\tthis.${3:secondProp} = ${3:secondProp};",
      "\t\tthis.${4:thirdProp} = ${4:thirdProp};",
      "\t}",
      "\t$0",
      "}"
    ]
  },
  "extendedClass": {
    "prefix": "clex",
    "body": [
      "class ${1:className} extends ${2:parentClass} {",
      "\tconstructor($0) {",
      "\t\tsuper()",
      "\t}",
      "}"
    ]
  },
  "constructor": {
    "prefix": "con",
    "body": "constructor($0) {\n\t\n}"
  },
  "method": {
    "prefix": "meth",
    "body": "$1 ($2) {\n\t$0\n}"
  },
  "propertyGet": {
    "prefix": "pge",
    "body": "get $1() {\n\treturn this.$0;\n}"
  },
  "propertyset": {
    "prefix": "pse",
    "body": "set $1 ($2) {\n\t$0;\n}"
  },
  "setInterval": {
    "prefix": "sti",
    "body": "setInterval(() => {\n\t$0\n}, ${1:timeInMs});"
  },
  "setTimeOut": {
    "prefix": "sto",
    "body": "setTimeout(() => {\n\t$0\n}, ${1:timeInMs});"
  },
  "JSON.parse": {
    "prefix": "jp",
    "body": "JSON.parse($0);"
  },
  "JSON.stringify": {
    "prefix": "js",
    "body": "JSON.stringify($0);"
  },
  "promise": {
    "prefix": "prom",
    "body": "const $1 = new Promise((res, rej) => {\n\t$0\n});"
  },
  "comment.big.block": {
    "prefix": "cmmb",
    "body": [
      "/**",
      "|--------------------------------------------------",
      "| $1",
      "|--------------------------------------------------",
      "*/",
      "$0"
    ]
  }
}